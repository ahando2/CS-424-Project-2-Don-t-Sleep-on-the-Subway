setwd("D:/ahando2/classes/SPRING 2022/CS 424/Project/Project 2")
library(lubridate)
CTA_daily <- read.table(file = "CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals.tsv",sep='\t',quote="", header = TRUE)
CTA_LatLon <- read.table(file = "CTA_-_System_Information_-_List_of__L__Stops.tsv",sep='\t',quote="", header = TRUE)
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_daily)[1] <- "station_id"
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_LatLon)[1] <- "STOP_ID"
subset(CTA_daily ,station_id == 40820)
# check if any of the data is missing
subset(CTA_daily , is.na(CTA_daily))
# format the date
CTA_daily <- CTA_daily[complete.cases(CTA_daily), ]
CTA_daily$date <- mdy(CTA_daily$date)
# get only columns station_id,stationname,date,rides
CTA_daily <- CTA_daily[,c("station_id","stationname","date","rides")]
# get only columns s"MAP_ID","STATION_NAME","Location"
CTA_LatLon <- CTA_LatLon[,c("MAP_ID","STATION_NAME","Location")]
CTA_LatLon$Location <- gsub('[( )]',"",as.character(CTA_LatLon$Location))
lat_lon<-unlist(strsplit(CTA_LatLon$Location,","))
CTA_LatLon$latitude <- lat_lon[c(TRUE, FALSE)]
CTA_LatLon$longtitude <- lat_lon[c(FALSE, TRUE)]
CTA_LatLon <- subset(CTA_LatLon,select= -c(Location))
CTA_LatLon$latitude <- as.numeric(CTA_LatLon$latitude)
CTA_LatLon$longtitude <- as.numeric(CTA_LatLon$longtitude)
str(CTA_daily)
summary(CTA_daily)
dim(CTA_daily)
colnames(CTA_LatLon)[1] <- "station_id"
CTA_LatLon$Location <- gsub('[( )]',"",as.character(CTA_LatLon$Location))
lat_lon<-unlist(strsplit(CTA_LatLon$Location,","))
CTA_LatLon$latitude <- lat_lon[c(TRUE, FALSE)]
CTA_LatLon$longtitude <- lat_lon[c(FALSE, TRUE)]
CTA_daily <- read.table(file = "CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals.tsv",sep='\t',quote="", header = TRUE)
CTA_LatLon <- read.table(file = "CTA_-_System_Information_-_List_of__L__Stops.tsv",sep='\t',quote="", header = TRUE)
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_daily)[1] <- "station_id"
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_LatLon)[1] <- "STOP_ID"
subset(CTA_daily ,station_id == 40820)
# check if any of the data is missing
subset(CTA_daily , is.na(CTA_daily))
# format the date
CTA_daily <- CTA_daily[complete.cases(CTA_daily), ]
CTA_daily$date <- mdy(CTA_daily$date)
# get only columns station_id,stationname,date,rides
CTA_daily <- CTA_daily[,c("station_id","stationname","date","rides")]
# get only columns s"MAP_ID","STATION_NAME","Location"
CTA_LatLon <- CTA_LatLon[,c("MAP_ID","STATION_NAME","Location")]
colnames(CTA_LatLon)[1] <- "station_id"
CTA_LatLon$Location <- gsub('[( )]',"",as.character(CTA_LatLon$Location))
lat_lon<-unlist(strsplit(CTA_LatLon$Location,","))
CTA_LatLon$latitude <- lat_lon[c(TRUE, FALSE)]
CTA_LatLon$longtitude <- lat_lon[c(FALSE, TRUE)]
CTA_LatLon <- subset(CTA_LatLon,select= -c(Location))
CTA_LatLon$latitude <- as.numeric(CTA_LatLon$latitude)
CTA_LatLon$longtitude <- as.numeric(CTA_LatLon$longtitude)
merge(CTA_daily,CTA_LatLon,by="station_id")
a<-merge(CTA_daily,CTA_LatLon,by="station_id")
# check if any of the data is missing
subset(CTA_daily , is.na(CTA_daily))
View(a)
# check if any of the data is missing
subset(CTA_daily , is.na(CTA_daily$latitude))
# check if any of the data is missing
subset(a , is.na(a))
# check if any of the data is missing
subset(a , is.na(a$latitude))
CTA_daily <- read.table(file = "CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals.tsv",sep='\t',quote="", header = TRUE)
CTA_daily$stationname
__L__Station_Entries_
CTA_daily <- read.table(file = "CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals.tsv",sep='\t',quote="", header = TRUE)
CTA_LatLon <- read.table(file = "CTA_-_System_Information_-_List_of__L__Stops.tsv",sep='\t',quote="", header = TRUE)
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_daily)[1] <- "station_id"
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_LatLon)[1] <- "STOP_ID"
subset(CTA_daily ,station_id == 40820)
# check if any of the data is missing
subset(CTA_daily , is.na(CTA_daily))
# format the date
CTA_daily <- CTA_daily[complete.cases(CTA_daily), ]
CTA_daily$date <- mdy(CTA_daily$date)
# get only columns station_id,stationname,date,rides
CTA_daily <- CTA_daily[,c("station_id","stationname","date","rides")]
# get only columns s"MAP_ID","STATION_NAME","Location"
CTA_LatLon <- CTA_LatLon[,c("MAP_ID","STATION_NAME","Location")]
colnames(CTA_LatLon)[1] <- "station_id"
CTA_LatLon$Location <- gsub('[( )]',"",as.character(CTA_LatLon$Location))
lat_lon<-unlist(strsplit(CTA_LatLon$Location,","))
CTA_LatLon$latitude <- lat_lon[c(TRUE, FALSE)]
CTA_LatLon$longtitude <- lat_lon[c(FALSE, TRUE)]
CTA_LatLon <- subset(CTA_LatLon,select= -c(Location))
CTA_LatLon$latitude <- as.numeric(CTA_LatLon$latitude)
CTA_LatLon$longtitude <- as.numeric(CTA_LatLon$longtitude)
a<-merge(CTA_daily,CTA_LatLon,by="station_id")
View(a)
a<-unique(merge(CTA_daily,CTA_LatLon,by="station_id"))
a<-(merge(CTA_daily,CTA_LatLon,by="station_id"))
View(a)
CTA_daily <- read.table(file = "CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals.tsv",sep='\t',quote="", header = TRUE)
CTA_LatLon <- read.table(file = "CTA_-_System_Information_-_List_of__L__Stops.tsv",sep='\t',quote="", header = TRUE)
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_daily)[1] <- "station_id"
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_LatLon)[1] <- "STOP_ID"
subset(CTA_daily ,station_id == 40820)
# check if any of the data is missing
subset(CTA_daily , is.na(CTA_daily))
# format the date
CTA_daily <- CTA_daily[complete.cases(CTA_daily), ]
CTA_daily$date <- mdy(CTA_daily$date)
# get only columns station_id,stationname,date,rides
CTA_daily <- CTA_daily[,c("station_id","stationname","date","rides")]
# get only columns s"MAP_ID","STATION_NAME","Location"
CTA_LatLon <- CTA_LatLon[,c("MAP_ID","Location")]
colnames(CTA_LatLon)[1] <- "station_id"
CTA_LatLon$Location <- gsub('[( )]',"",as.character(CTA_LatLon$Location))
lat_lon<-unlist(strsplit(CTA_LatLon$Location,","))
CTA_LatLon$latitude <- lat_lon[c(TRUE, FALSE)]
CTA_LatLon$longtitude <- lat_lon[c(FALSE, TRUE)]
CTA_LatLon <- subset(CTA_LatLon,select= -c(Location))
CTA_LatLon$latitude <- as.numeric(CTA_LatLon$latitude)
View(CTA_daily)
subset(CTA_LatLon ,station_id == 40500)
subset(a ,station_id == 40500)
CTA_daily$latitude <- NA
CTA_daily$longtitude <- NA
View(CTA_LatLon)
which(CTA_LatLon$station_id== 41170)
View(CTA_LatLon)
unique(CTA_LatLon)
which(CTA_LatLon$station_id== 41170)
CTA_LatLon <- unique(CTA_LatLon)
which(CTA_LatLon$station_id== 41170)
CTA_LatLon$latitude[[which(CTA_LatLon$station_id== 41170)]]
for ( station_id in CTA_LatLon$station_id){
CTA_daily$latitude[which(CTA_daily$station_id == station_id)] <- CTA_LatLon$latitude[[which(CTA_LatLon$station_id== station_id)]]
CTA_daily$longtitude[which(CTA_daily$station_id == station_id)] <- CTA_LatLon$longtitude[[which(CTA_LatLon$station_id== station_id)]]
}
# subset(a ,station_id == 40500)
n_occur <- data.frame(table(CTA_LatLon$station_id))
CTA_LatLon[CTA_LatLon$station_id %in% n_occur$Var1[n_occur$Freq > 1],]
CTA_LatLon <- read.table(file = "CTA_-_System_Information_-_List_of__L__Stops.tsv",sep='\t',quote="", header = TRUE)
View(CTA_LatLon)
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_daily)[1] <- "station_id"
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_LatLon)[1] <- "STOP_ID"
# check if any of the data is missing
subset(CTA_daily , is.na(CTA_daily))
# format the date
CTA_daily <- CTA_daily[complete.cases(CTA_daily), ]
CTA_daily$date <- mdy(CTA_daily$date)
# get only columns station_id,stationname,date,rides
CTA_daily <- CTA_daily[,c("station_id","stationname","date","rides")]
# get only columns s"MAP_ID","STATION_NAME","Location"
CTA_LatLon <- CTA_LatLon[,c("MAP_ID","Location")]
colnames(CTA_LatLon)[1] <- "station_id"
CTA_LatLon$Location <- gsub('[( )]',"",as.character(CTA_LatLon$Location))
lat_lon<-unlist(strsplit(CTA_LatLon$Location,","))
CTA_LatLon$latitude <- lat_lon[c(TRUE, FALSE)]
CTA_LatLon$longtitude <- lat_lon[c(FALSE, TRUE)]
CTA_LatLon <- subset(CTA_LatLon,select= -c(Location))
CTA_LatLon$latitude <- as.numeric(CTA_LatLon$latitude)
CTA_LatLon$longtitude <- as.numeric(CTA_LatLon$longtitude)
CTA_LatLon <- unique(CTA_LatLon)
CTA_daily$latitude <- NA
CTA_daily$longtitude <- NA
# subset(a ,station_id == 40500)
n_occur <- data.frame(table(CTA_LatLon$station_id))
CTA_LatLon[CTA_LatLon$station_id %in% n_occur$Var1[n_occur$Freq > 1],]
subset(CTA_LatLon,select = -c(174))
CTA_LatLon[-c(174),]
b<-CTA_LatLon[-c(174),]
b<-CTA_LatLon[-c("174"),]
b<-CTA_LatLon[-174,]
View(b)
b<-CTA_LatLon[-c(174,),]
b<-CTA_LatLon[-c(174),]
b<-CTA_LatLon[-c(174),]
b<-CTA_LatLon[-c(174)]
# subset(a ,station_id == 40500)
n_occur <- data.frame(table(CTA_LatLon$station_id))
CTA_LatLon[CTA_LatLon$station_id %in% n_occur$Var1[n_occur$Freq > 1],]
b<-CTA_LatLon[-c(173),]
CTA_daily <- read.table(file = "CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals.tsv",sep='\t',quote="", header = TRUE)
CTA_LatLon <- read.table(file = "CTA_-_System_Information_-_List_of__L__Stops.tsv",sep='\t',quote="", header = TRUE)
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_daily)[1] <- "station_id"
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_LatLon)[1] <- "STOP_ID"
# check if any of the data is missing
subset(CTA_daily , is.na(CTA_daily))
# format the date
CTA_daily <- CTA_daily[complete.cases(CTA_daily), ]
CTA_daily$date <- mdy(CTA_daily$date)
# get only columns station_id,stationname,date,rides
CTA_daily <- CTA_daily[,c("station_id","stationname","date","rides")]
# get only columns s"MAP_ID","STATION_NAME","Location"
CTA_LatLon <- CTA_LatLon[,c("MAP_ID","Location")]
colnames(CTA_LatLon)[1] <- "station_id"
CTA_LatLon$Location <- gsub('[( )]',"",as.character(CTA_LatLon$Location))
lat_lon<-unlist(strsplit(CTA_LatLon$Location,","))
CTA_LatLon$latitude <- lat_lon[c(TRUE, FALSE)]
CTA_LatLon$longtitude <- lat_lon[c(FALSE, TRUE)]
CTA_LatLon <- subset(CTA_LatLon,select= -c(Location))
CTA_LatLon$latitude <- as.numeric(CTA_LatLon$latitude)
CTA_LatLon$longtitude <- as.numeric(CTA_LatLon$longtitude)
# subset(a ,station_id == 40500)
n_occur <- data.frame(table(CTA_LatLon$station_id))
CTA_LatLon[CTA_LatLon$station_id %in% n_occur$Var1[n_occur$Freq > 1],]
CTA_LatLon[CTA_LatLon$station_id %in% n_occur$Var1[n_occur$Freq > 1],]
# subset(a ,station_id == 40500)
n_occur <- data.frame(table(CTA_LatLon$station_id))
CTA_LatLon[CTA_LatLon$station_id %in% n_occur$Var1[n_occur$Freq > 2],]
CTA_LatLon <- unique(CTA_LatLon)
CTA_daily$latitude <- NA
CTA_daily$longtitude <- NA
# subset(a ,station_id == 40500)
n_occur <- data.frame(table(CTA_LatLon$station_id))
CTA_LatLon[CTA_LatLon$station_id %in% n_occur$Var1[n_occur$Freq > 1],]
CTA_LatLon[CTA_LatLon$station_id %in% n_occur$Var1[n_occur$Freq > 1],]
b<-CTA_LatLon[-c(174),]
which(CTA_daily$station_id == 41400)[0]
which(CTA_LatLon$station_id == 41400)
which(CTA_LatLon$station_id == 41400)[0]
which(CTA_LatLon$station_id == 41400]
b<-CTA_LatLon[-c(which(CTA_daily$station_id == station_id)[0]),]
for ( station_id in CTA_LatLon$station_id){
CTA_daily$latitude[which(CTA_daily$station_id == station_id)] <- CTA_LatLon$latitude[[which(CTA_LatLon$station_id== station_id)]]
CTA_daily$longtitude[which(CTA_daily$station_id == station_id)] <- CTA_LatLon$longtitude[[which(CTA_LatLon$station_id== station_id)]]
}
# check if any of the data is missing
subset(a , is.na(a$latitude))
str(CTA_daily)
summary(CTA_daily)
dim(CTA_daily)
# station_names that will be saved
station_names <- c("UIC-Halsted","O'Hare Airport","Damen/Milwaukee")
# save data for these 3 stations in each own files
for (station_name in station_names) {
CTA_subset <- subset(CTA_daily , stationname == station_name)
file_name <- ifelse(station_name == "Damen/Milwaukee","Subway/Damen_Milwaukee",paste('Subway/', station_name, sep=""))
write.table(CTA_subset, file=paste(file_name, ".tsv", sep=""), quote=FALSE, sep='\t')
}
which(CTA_LatLon$station_id == 414000]
b<-CTA_LatLon[-c(which(CTA_daily$station_id == station_id)[0]),]
for ( station_id in CTA_LatLon$station_id){
CTA_daily$latitude[which(CTA_daily$station_id == station_id)] <- CTA_LatLon$latitude[[which(CTA_LatLon$station_id== station_id)]]
CTA_daily$longtitude[which(CTA_daily$station_id == station_id)] <- CTA_LatLon$longtitude[[which(CTA_LatLon$station_id== station_id)]]
}
# check if any of the data is missing
subset(a , is.na(a$latitude))
str(CTA_daily)
summary(CTA_daily)
dim(CTA_daily)
# station_names that will be saved
station_names <- c("UIC-Halsted","O'Hare Airport","Damen/Milwaukee")
# save data for these 3 stations in each own files
for (station_name in station_names) {
CTA_subset <- subset(CTA_daily , stationname == station_name)
file_name <- ifelse(station_name == "Damen/Milwaukee","Subway/Damen_Milwaukee",paste('Subway/', station_name, sep=""))
write.table(CTA_subset, file=paste(file_name, ".tsv", sep=""), quote=FALSE, sep='\t')
}
b<-which(CTA_LatLon$station_id == 414000)
b<-which(CTA_LatLon$station_id == 414000)
b<-CTA_LatLon[which(CTA_LatLon$station_id == 414000)]
View(b)
CTA_LatLon[CTA_LatLon$station_id %in% n_occur$Var1[n_occur$Freq > 1],]
b<-CTA_LatLon[which(CTA_LatLon$station_id == 41400)]
b<-which(CTA_LatLon$station_id == 41400)
b<-which(CTA_LatLon$station_id == 41400)[0]
b<-unlist(which(CTA_LatLon$station_id == 41400))[0]
unlist(which(CTA_LatLon$station_id == 41400))[0]
unlist(which(CTA_LatLon$station_id == 41400))
b <- unlist(which(CTA_LatLon$station_id == 41400))[1]
b <- (which(CTA_LatLon$station_id == 41400))[1]
(which(CTA_LatLon$station_id == 41400))[1]
b<- CTA_LatLon[-c(which(CTA_LatLon$station_id == 41400)[1]),]
CTA_daily <- read.table(file = "CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals.tsv",sep='\t',quote="", header = TRUE)
CTA_LatLon <- read.table(file = "CTA_-_System_Information_-_List_of__L__Stops.tsv",sep='\t',quote="", header = TRUE)
# CTA_daily$stationname 1088958
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_daily)[1] <- "station_id"
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_LatLon)[1] <- "STOP_ID"
# check if any of the data is missing
subset(CTA_daily , is.na(CTA_daily))
# format the date
CTA_daily <- CTA_daily[complete.cases(CTA_daily), ]
CTA_daily$date <- mdy(CTA_daily$date)
# get only columns station_id,stationname,date,rides
CTA_daily <- CTA_daily[,c("station_id","stationname","date","rides")]
# get only columns s"MAP_ID","STATION_NAME","Location"
CTA_LatLon <- CTA_LatLon[,c("MAP_ID","Location")]
colnames(CTA_LatLon)[1] <- "station_id"
CTA_LatLon$Location <- gsub('[( )]',"",as.character(CTA_LatLon$Location))
lat_lon<-unlist(strsplit(CTA_LatLon$Location,","))
CTA_LatLon$latitude <- lat_lon[c(TRUE, FALSE)]
CTA_LatLon$longtitude <- lat_lon[c(FALSE, TRUE)]
CTA_LatLon <- subset(CTA_LatLon,select= -c(Location))
CTA_LatLon$latitude <- as.numeric(CTA_LatLon$latitude)
CTA_LatLon$longtitude <- as.numeric(CTA_LatLon$longtitude)
CTA_LatLon <- unique(CTA_LatLon)
CTA_daily$latitude <- NA
CTA_daily$longtitude <- NA
# subset(a ,station_id == 40500)
n_occur <- data.frame(table(CTA_LatLon$station_id))
CTA_LatLon[CTA_LatLon$station_id %in% n_occur$Var1[n_occur$Freq > 1],]
CTA_LatLon<- CTA_LatLon[-c(which(CTA_LatLon$station_id == 41400)[1]),]
CTA_daily <- read.table(file = "CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals.tsv",sep='\t',quote="", header = TRUE)
CTA_LatLon <- read.table(file = "CTA_-_System_Information_-_List_of__L__Stops.tsv",sep='\t',quote="", header = TRUE)
# CTA_daily$stationname 1088958
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_daily)[1] <- "station_id"
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_LatLon)[1] <- "STOP_ID"
# check if any of the data is missing
subset(CTA_daily , is.na(CTA_daily))
# format the date
CTA_daily <- CTA_daily[complete.cases(CTA_daily), ]
CTA_daily$date <- mdy(CTA_daily$date)
# get only columns station_id,stationname,date,rides
CTA_daily <- CTA_daily[,c("station_id","stationname","date","rides")]
# get only columns s"MAP_ID","STATION_NAME","Location"
CTA_LatLon <- CTA_LatLon[,c("MAP_ID","Location")]
colnames(CTA_LatLon)[1] <- "station_id"
CTA_LatLon$Location <- gsub('[( )]',"",as.character(CTA_LatLon$Location))
lat_lon<-unlist(strsplit(CTA_LatLon$Location,","))
CTA_LatLon$latitude <- lat_lon[c(TRUE, FALSE)]
CTA_LatLon$longtitude <- lat_lon[c(FALSE, TRUE)]
CTA_LatLon <- subset(CTA_LatLon,select= -c(Location))
CTA_LatLon$latitude <- as.numeric(CTA_LatLon$latitude)
CTA_LatLon$longtitude <- as.numeric(CTA_LatLon$longtitude)
CTA_LatLon <- unique(CTA_LatLon)
CTA_daily$latitude <- NA
CTA_daily$longtitude <- NA
# subset(a ,station_id == 40500)
n_occur <- data.frame(table(CTA_LatLon$station_id))
CTA_LatLon[CTA_LatLon$station_id %in% n_occur$Var1[n_occur$Freq > 1],]
CTA_LatLon<- CTA_LatLon[-c(which(CTA_LatLon$station_id == 41400)[1]),]
for ( station_id in CTA_LatLon$station_id){
CTA_daily$latitude[which(CTA_daily$station_id == station_id)] <- CTA_LatLon$latitude[[which(CTA_LatLon$station_id== station_id)]]
CTA_daily$longtitude[which(CTA_daily$station_id == station_id)] <- CTA_LatLon$longtitude[[which(CTA_LatLon$station_id== station_id)]]
}
# check if any of the data is missing
subset(CTA_daily , is.na(CTA_daily$latitude))
# check if any of the data is missing
unique(subset(CTA_daily , is.na(CTA_daily$latitude)))
# check if any of the location data is missing
subset(CTA_daily , is.na(CTA_daily$latitude))
# check if any of the location data is missing
subset(CTA_daily , is.na(CTA_daily$latitude))
n_occur <- data.frame(table(CTA_daily$station_id))
CTA_daily[CTA_daily$station_id %in% n_occur$Var1[n_occur$Freq > 1],]
# check if any of the location data is missing
na_CTA_daily <- subset(CTA_daily , is.na(CTA_daily$latitude))
n_occur <- data.frame(table(na_CTA_daily$station_id))
na_CTA_daily[na_CTA_daily$station_id %in% n_occur$Var1[n_occur$Freq > 1],]
unique(na_CTA_daily$station_id)
unique(na_CTA_daily$station_name)
unique(na_CTA_daily$stationname)
# "Randolph/Wabash"(40200)  "Madison/Wabash"(40640)   "Washington/State"(40500) "Homan"(41580) are the missing location
# 41.884431, -87.626149   41.882023, -87.626098   41.8837, -87.6278   41.884914, -87.711327
# location from Wikipedia
na_latitude <- c(41.884431,41.882023,41.8837,41.884914)
na_longtitude <- c(-87.626149,-87.626098,-87.6278,-87.711327)
na_id <- c(40200,40640,40500,41580)
na_id[1]
# "Randolph/Wabash"(40200)  "Madison/Wabash"(40640)   "Washington/State"(40500) "Homan"(41580) are the missing location
# 41.884431, -87.626149   41.882023, -87.626098   41.8837, -87.6278   41.884914, -87.711327
# location from Wikipedia
na_latitude <- c(41.884431,41.882023,41.8837,41.884914)
na_longtitude <- c(-87.626149,-87.626098,-87.6278,-87.711327)
na_id <- c(40200,40640,40500,41580)
for( i in (1:4)){
CTA_daily$latitude[which(CTA_daily$station_id == na_id[i])] <- na_latitude[i]
CTA_daily$longtitude[which(CTA_daily$station_id == na_id[i])] <- na_longtitude[i]
}
subset(CTA_daily , is.na(CTA_daily))
latitude
subset(CTA_daily , is.na(CTA_daily$latitude))
subset(CTA_daily , is.na(CTA_daily$longtitude))
write.table(CTA_daily, file=paste("SubwayLarge/CTA_daily", ".tsv", sep=""), quote=FALSE, sep='\t')
setwd("D:/ahando2/classes/SPRING 2022/CS 424/Project/Project 2/SubwayLarge")
# import libraries
library(shiny)
library(shinydashboard)
library(ggplot2)
library(DT)
library(lubridate)
library(scales)
library(jpeg)
library(grid)
library(leaflet)
# get all of the tsv files in the same directory
temp = list.files(pattern="*.tsv")
allData2 <- lapply(temp, read.delim)
CTA_daily <- do.call(rbind, allData2)
# format the date
CTA_daily <- CTA_daily[complete.cases(CTA_daily), ]
CTA_daily$date <- ymd(CTA_daily$date)
View(CTA_daily)
# convert the rides from int to numbers
CTA_daily$rides <- as.numeric(CTA_daily$rides)
write.table(CTA_daily, file=paste("SubwayLarge/CTA_daily", ".tsv", sep=""), quote=FALSE, sep='\t')
setwd("D:/ahando2/classes/SPRING 2022/CS 424/Project/Project 2")
library(lubridate)
CTA_daily <- read.table(file = "CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals.tsv",sep='\t',quote="", header = TRUE)
CTA_LatLon <- read.table(file = "CTA_-_System_Information_-_List_of__L__Stops.tsv",sep='\t',quote="", header = TRUE)
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_daily)[1] <- "station_id"
# change first column name from `Ã¯..station_id` to `station_id`
colnames(CTA_LatLon)[1] <- "STOP_ID"
# check if any of the data is missing
subset(CTA_daily , is.na(CTA_daily))
# format the date
CTA_daily <- CTA_daily[complete.cases(CTA_daily), ]
CTA_daily$date <- mdy(CTA_daily$date)
# get only columns station_id,stationname,date,rides
CTA_daily <- CTA_daily[,c("station_id","stationname","date","rides")]
# get only columns s"MAP_ID","STATION_NAME","Location"
CTA_LatLon <- CTA_LatLon[,c("MAP_ID","Location")]
colnames(CTA_LatLon)[1] <- "station_id"
CTA_LatLon$Location <- gsub('[( )]',"",as.character(CTA_LatLon$Location))
lat_lon<-unlist(strsplit(CTA_LatLon$Location,","))
CTA_LatLon$latitude <- lat_lon[c(TRUE, FALSE)]
CTA_LatLon$longtitude <- lat_lon[c(FALSE, TRUE)]
CTA_LatLon <- subset(CTA_LatLon,select= -c(Location))
CTA_LatLon$latitude <- as.numeric(CTA_LatLon$latitude)
CTA_LatLon$longtitude <- as.numeric(CTA_LatLon$longtitude)
CTA_LatLon <- unique(CTA_LatLon)
CTA_daily$latitude <- NA
CTA_daily$longtitude <- NA
# check for duplicates of station_id
n_occur <- data.frame(table(CTA_LatLon$station_id))
CTA_LatLon[CTA_LatLon$station_id %in% n_occur$Var1[n_occur$Freq > 1],]
# duplicate exist for id 41400, remove the first row
CTA_LatLon<- CTA_LatLon[-c(which(CTA_LatLon$station_id == 41400)[1]),]
# merge location table with rides table
for ( station_id in CTA_LatLon$station_id){
CTA_daily$latitude[which(CTA_daily$station_id == station_id)] <- CTA_LatLon$latitude[[which(CTA_LatLon$station_id== station_id)]]
CTA_daily$longtitude[which(CTA_daily$station_id == station_id)] <- CTA_LatLon$longtitude[[which(CTA_LatLon$station_id== station_id)]]
}
# check if any of the location data is missing
na_CTA_daily <- subset(CTA_daily , is.na(CTA_daily$latitude))
unique(na_CTA_daily$station_id)
unique(na_CTA_daily$stationname)
# "Randolph/Wabash"(40200)  "Madison/Wabash"(40640)   "Washington/State"(40500) "Homan"(41580) are the missing location
# 41.884431, -87.626149   41.882023, -87.626098   41.8837, -87.6278   41.884914, -87.711327
# location from Wikipedia
na_latitude <- c(41.884431,41.882023,41.8837,41.884914)
na_longtitude <- c(-87.626149,-87.626098,-87.6278,-87.711327)
na_id <- c(40200,40640,40500,41580)
for( i in (1:4)){
CTA_daily$latitude[which(CTA_daily$station_id == na_id[i])] <- na_latitude[i]
CTA_daily$longtitude[which(CTA_daily$station_id == na_id[i])] <- na_longtitude[i]
CTA_LatLon <- rbind(CTA_LatLon, c(na_id[i],na_latitude[i],na_longtitude[i]))
}
# re-check if any of the location data is missing
subset(CTA_daily , is.na(CTA_daily))
# save to a tsv file
write.table(CTA_daily, file=paste("SubwayLarge/CTA_daily", ".tsv", sep=""), quote=FALSE, sep='\t')
write.table(CTA_LatLon, file=paste("SubwayLarge/CTA_Location", ".tsv", sep=""), quote=FALSE, sep='\t')
View(allData2)
setwd("D:/ahando2/classes/SPRING 2022/CS 424/Project/Project 2/SubwayLarge")
# import libraries
library(shiny)
library(shinydashboard)
library(ggplot2)
library(DT)
library(lubridate)
library(scales)
library(jpeg)
library(grid)
library(leaflet)
# get all of the tsv files in the same directory
temp = list.files(pattern="*.tsv")
data_daily <- lapply("CTA_daily.tsv", read.delim)
CTA_daily <- do.call(rbind, data_daily)
data_location <- lapply("CTA_Location.tsv", read.delim)
CTA_location <- do.call(rbind, data_location)
setwd("D:/ahando2/classes/SPRING 2022/CS 424/Project/Project 2/SubwayLarge")
# import libraries
library(shiny)
library(shinydashboard)
library(ggplot2)
library(DT)
library(lubridate)
library(scales)
library(jpeg)
library(grid)
library(leaflet)
# get all of the tsv files in the same directory
temp = list.files(pattern="*.tsv")
data_daily <- lapply("CTA_daily.tsv", read.delim)
CTA_daily <- do.call(rbind, data_daily)
data_location <- lapply("CTA_Location.tsv", read.delim)
CTA_location <- do.call(rbind, data_location)
View(CTA_daily)
[which(CTA_daily$stationname== "UIC-Halsted")]
which(CTA_daily$stationname== "UIC-Halsted")
CTA_daily[[which(CTA_daily$stationname== "UIC-Halsted")[1]]]$stationname
CTA_daily[[which(CTA_daily$stationname== "UIC-Halsted")[1]]]
which(CTA_daily$stationname== "UIC-Halsted")[1]
CTA_daily[[which(CTA_daily$stationname== "UIC-Halsted")[1]]]
CTA_daily$station_id[[which(CTA_daily$stationname== "UIC-Halsted")[1]]]
CTA_daily$station_id[[which(CTA_daily$stationname== "UIC-Halsted")[1]]]
runApp()
runApp()
zCTA_daily$station_id[[which(CTA_daily$stationname== input$StationName1)[1]]]
